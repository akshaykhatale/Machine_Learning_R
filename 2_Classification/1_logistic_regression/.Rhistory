setwd("~/Desktop/ML/R/2_Classification/1_logistic_regression")
#Importing Dataset
dataset=read.csv("Social_Network_Ads.csv")
#Spliting data into trainig and testing
library("caTools")
set.seed(123)
split=sample.split(dataset$y,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Importing Dataset
dataset=read.csv("Social_Network_Ads.csv")
#Spliting data into trainig and testing
library("caTools")
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
#Importing Dataset
dataset=read.csv("Social_Network_Ads.csv")
dataset=dataset[,3:5]
View(dataset)
View(dataset)
View(dataset)
#Spliting data into trainig and testing
library("caTools")
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.75)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
View(test_set)
View(test_set)
#Spliting data into trainig and testing
library("caTools")
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.75)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Feature Scaling
training_set[,1:2]=scale(training_set[,1:2])
test_set[,1:2]=scale(test_set[,1:2])
View(test_set)
View(test_set)
#Logistic Regression on training set
classifier= glm(formula = Purchased~.,
family = binomial ,
data = training_set)
prob_pred
#Predicting the Test on data
prob_pred=predict(classifier,type = 'response',newdata = test_set[-3pro])
#Predicting the Test on data
prob_pred=predict(classifier,type = 'response',newdata = test_set[-3])
prob_pred
prob_pred=predict(classifier,type = 'response',newdata = test_set[-3])
y_pred=ifelse(prob_pred>0.5,1,0)
y_pred
#Creating The confusion Metrix
cm=table(test_set$Purchased ,y_pred)
cm
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalery')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
print(grid_set,pch='.',col= ifelse(y_pred==1,'springgreen3','tomato'))
print(set,pch=21,bg=21,bg=ifelse(set[,3]==1,'green4','red3'))
install.packages('ElemStatLearn')
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalery')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
print(grid_set,pch='.',col= ifelse(y_pred==1,'springgreen3','tomato'))
print(set,pch=21,bg=21,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalery')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
print(grid_set,pch='.',col= ifelse(y_pred==1,'springgreen3','tomato'))
print(set,pch=21,bg=21,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_pred==1,'springgreen3','tomato'))
points(set,pch=21,bg=21,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_pred==1,'springgreen3','tomato'))
points(set,pch=21,bg=21,col=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_pred==1,'springgreen3','tomato'))
points(set,pch=21,,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_grid==1,'springgreen3','tomato'))
points(set,pch=21,,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_grid==1,'springgreen3','tomato'))
points(set,pch=21,,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_grid==1,'springgreen3','tomato'))
points(set,pch=21,,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set=training_set
x1=seq(min(set[,1])-1,min(set[,1])+1,by=0.01)
x2=seq(min(set[,2])-1,min(set[,2])+1,by=0.01)
grid_set=expand.grid(x1,x2)
colnames(grid_set)=c('Age','EstimatedSalary')
prob_set=predict(classifier,type = 'response',newdata = grid_set)
y_grid=ifelse(prob_set>0.50,1,0)
plot(set[,-3],
main = 'Logistic Regression(Training Set)',
xlab = 'Age',ylab = 'Estimated Salery',
xlim=range(x1),ylim = range(x2))
contour(x1,x2,matrix(as.numeric(y_grid),length(x1),length(x2)),add = TRUE)
points(grid_set,pch='.',col= ifelse(y_grid==1,'springgreen3','tomato'))
points(set,pch=21,,bg=ifelse(set[,3]==1,'green4','red3'))
library(ElemStatLearn)
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
prob_set = predict(classifier, type = 'response', newdata = grid_set)
y_grid = ifelse(prob_set > 0.5, 1, 0)
plot(set[, -3],
main = 'Logistic Regression (Training set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
#Visualizing the Testing Data
#install.packages('ElemStatLearn')
library(ElemStatLearn)
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
prob_set = predict(classifier, type = 'response', newdata = grid_set)
y_grid = ifelse(prob_set > 0.5, 1, 0)
plot(set[, -3],
main = 'Logistic Regression (Training set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
